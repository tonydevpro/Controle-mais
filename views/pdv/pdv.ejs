<%- include('../partials/header', { usuario: usuario }) %>
<link rel="stylesheet" href="/css/pdv.css" />
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />

<main class="pdv-container">
  <h2>PDV - Venda Rápida</h2>

  <form id="form-venda">
    <div class="form-group">
      <input type="text" id="produto-input" placeholder="Digite o nome do produto" autocomplete="off" />
      <input type="hidden" id="produto-id" />
      <input type="number" id="quantidade" placeholder="Quantidade" min="1" />
      <input type="number" id="desconto" placeholder="Desconto R$" min="0" step="0.01" />
      <button type="button" onclick="adicionarItem()">Adicionar</button>
    </div>

    <table id="tabela-itens">
      <thead>
        <tr>
          <th>Produto</th>
          <th>Qtd</th>
          <th>Preço und.</th>
          <th>Total</th>
          <th>Total com Desconto</th>
          <th>Ação</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>

    <p><strong>Total:</strong> R$ <span id="total-venda">0.00</span></p>

    <label for="forma_pagamento">Forma de Pagamento:</label>
    <select id="forma_pagamento" required>
      <option value="dinheiro">Dinheiro</option>
      <option value="pix">Pix</option>
      <option value="debito">Débito</option>
      <option value="credito">Crédito</option>
    </select>

    <button type="submit">Finalizar Venda</button>
  </form>
</main>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

<script>
  const produtos = <%- JSON.stringify(produtos) %>;
  const itens = [];

  // Autocomplete para produtos
  $("#produto-input").autocomplete({
    source: produtos.map(p => ({
      label: `${p.nome} (Estoque: ${p.quantidade})`,
      value: p.nome,
      id: p.id,
      preco: p.preco_venda,
      disponivel: p.quantidade
    })),
    select: function(event, ui) {
      $("#produto-id").val(ui.item.id);
      $("#quantidade").attr("max", ui.item.disponivel).val(1);
      $("#quantidade").data("preco", ui.item.preco);
      $("#quantidade").data("disponivel", ui.item.disponivel);
      $("#produto-input").data("produto", ui.item);
    }
  });

  // Garantir seleção correta mesmo digitando manualmente
  $("#produto-input").on("change", function() {
    const nomeDigitado = $(this).val();
    const produtoSelecionado = produtos.find(p => p.nome === nomeDigitado);

    if (produtoSelecionado) {
      const item = {
        id: produtoSelecionado.id,
        label: `${produtoSelecionado.nome} (Estoque: ${produtoSelecionado.quantidade})`,
        preco: produtoSelecionado.preco_venda,
        disponivel: produtoSelecionado.quantidade
      };
      $(this).data("produto", item);
      $("#produto-id").val(item.id);
      $("#quantidade").attr("max", item.disponivel).val(1);
    } else {
      $(this).data("produto", null);
      $("#produto-id").val('');
      $("#quantidade").attr("max", null).val('');
    }
  });

  // Adicionar item à venda
  window.adicionarItem = function() {
    const produto = $("#produto-input").data("produto");
    const quantidade = parseInt($("#quantidade").val());
    const desconto = parseFloat($("#desconto").val()) || 0;

    if (!produto) return alert("Selecione um produto válido da lista.");
    if (!quantidade || quantidade <= 0 || quantidade > produto.disponivel) return alert("Quantidade inválida.");
    if (desconto > produto.preco * quantidade) return alert("Desconto maior que o valor total.");

    itens.push({
      produto_id: produto.id,
      nome: produto.label,
      quantidade,
      preco_unitario: parseFloat(produto.preco),
      desconto
    });

    atualizarTabela();

    // Limpar campos
    $("#produto-input").val('').data("produto", null);
    $("#produto-id").val('');
    $("#quantidade").val('');
    $("#desconto").val('');
  }

  function atualizarTabela() {
    const tbody = document.querySelector('#tabela-itens tbody');
    tbody.innerHTML = '';

    itens.forEach((item, index) => {
      const total = item.quantidade * item.preco_unitario;
      const totalComDesconto = total - item.desconto;
      tbody.innerHTML += `
        <tr>
          <td>${item.nome}</td>
          <td>${item.quantidade}</td>
          <td>R$ ${item.preco_unitario.toFixed(2)}</td>
          <td>R$ ${total.toFixed(2)}</td>
          <td>R$ ${totalComDesconto.toFixed(2)}</td>
          <td><button type="button" onclick="excluirItem(${index})">Excluir</button></td>
        </tr>
      `;
    });

    atualizarTotal();
  }

  function atualizarTotal() {
    const total = itens.reduce((soma, i) => soma + (i.quantidade * i.preco_unitario - i.desconto), 0);
    document.getElementById('total-venda').innerText = total.toFixed(2);
  }

  function excluirItem(index) {
    itens.splice(index, 1);
    atualizarTabela();
  }

  // Finalizar venda
  document.getElementById('form-venda').addEventListener('submit', async e => {
    e.preventDefault();

    if(itens.length === 0){
      alert("Adicione pelo menos um item antes de finalizar a venda.");
      return;
    }

    const forma_pagamento = document.getElementById('forma_pagamento').value;
    try {
      const res = await fetch('/pdv/finalizar', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ itens, forma_pagamento })
      });
      const json = await res.json();

      if (json.sucesso) {
        window.open(`/vendas/${json.vendaId}/recibo-pdf`, '_blank');
        alert('Venda realizada com sucesso!');
        location.reload();
      } else {
        alert('Erro ao finalizar venda.');
      }
    } catch (error) {
      alert('Erro na comunicação com o servidor.');
      console.error(error);
    }
  });
</script>

<%- include('../partials/footer.ejs') %>
